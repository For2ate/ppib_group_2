stages:
  - validate
  - deploy

variables:
  ANSIBLE_HOST_KEY_CHECKING: "False"

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

.validate_template: &validate_template
  before_script:
    - cd ansible
    - pip install ansible ansible-lint
  tags:
    - ansible
  only:
    - main

.deploy_template: &deploy_template
  before_script:
    - cd ansible
    - pip install ansible
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$VAULT_PASSWORD" > .vault_pass.txt
    - chmod 600 .vault_pass.txt
  tags:
    - ansible
  only:
    - main

# VALIDATION STAGE
validate_ansible:
  stage: validate
  <<: *validate_template
  script:
    - echo "Checking Ansible syntax..."
    - ansible-playbook --syntax-check playbooks/base-setup.yaml
    - ansible-playbook --syntax-check playbooks/docker-setup.yaml
    - ansible-playbook --syntax-check playbooks/db-deploy.yaml
    - ansible-playbook --syntax-check playbooks/elgg-deploy.yaml
    - ansible-playbook --syntax-check playbooks/user-management.yaml
    - ansible-playbook --syntax-check playbooks/ping-host.yaml
    - ansible-playbook --syntax-check playbooks/debug.yaml
    - echo "✅ All playbooks syntax is valid!"

validate_inventory:
  stage: validate
  <<: *validate_template
  script:
    - echo "Validating inventory..."
    - ansible -i inventory/hosts.ini --list-hosts all
    - ansible -i inventory/hosts.ini -m ping all
    - echo "✅ Inventory validation completed!"

# DEPLOY STAGE - ОТДЕЛЬНЫЕ JOBS ДЛЯ КАЖДОГО ПЛЕЙБУКА
deploy_base_setup:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🚀 Deploying base system setup..."
    - ansible-playbook -i inventory/hosts.ini playbooks/base-setup.yaml --vault-password-file .vault_pass.txt
    - echo "✅ Base setup completed!"
  when: manual

deploy_docker:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🐳 Deploying Docker setup..."
    - ansible-playbook -i inventory/hosts.ini playbooks/docker-setup.yaml --vault-password-file .vault_pass.txt
    - echo "✅ Docker setup completed!"
  when: manual

deploy_database:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🗄️ Deploying database..."
    - ansible-playbook -i inventory/hosts.ini playbooks/db-deploy.yaml --vault-password-file .vault_pass.txt
    - echo "✅ Database deployment completed!"
  when: manual

deploy_elgg:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🌐 Deploying ELGG application..."
    - ansible-playbook -i inventory/hosts.ini playbooks/elgg-deploy.yaml --vault-password-file .vault_pass.txt
    - echo "✅ ELGG deployment completed!"
  when: manual

deploy_user_management:
  stage: deploy
  <<: *deploy_template
  script:
    - |
      echo "👥 Deploying user management..."
      # Создаем временный файл с пользователями
      cat > /tmp/devops_users.yml << EOF
      ---
      devops_users:
        - username: "$USER1_NAME"
          ssh_key: "$USER1_SSH_KEY"
        - username: "$USER2_NAME"
          ssh_key: "$USER2_SSH_KEY"
      EOF
      
      ansible-playbook -i inventory/hosts.ini playbooks/user-management.yaml \
        --vault-password-file .vault_pass.txt \
        -e @/tmp/devops_users.yml
    - echo "✅ User management completed!"
  when: manual

# ДОПОЛНИТЕЛЬНЫЕ JOBS
test_connection:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🔍 Testing connection to all hosts..."
    - ansible -i inventory/hosts.ini -m ping all
    - echo "✅ All hosts are reachable!"
  when: manual

run_debug:
  stage: deploy
  <<: *deploy_template
  script:
    - echo "🐛 Running debug playbook..."
    - ansible-playbook -i inventory/hosts.ini playbooks/debug.yaml --vault-password-file .vault_pass.txt
    - echo "✅ Debug completed!"
  when: manual

# ПОЛНОЕ РАЗВЕРТЫВАНИЕ С НУЛЯ
full_deploy:
  stage: deploy
  <<: *deploy_template
  script:
    - |
      echo "🏗️ Starting FULL infrastructure deployment from scratch..."
      
      # Создаем временный файл с пользователями
      cat > /tmp/devops_users.yml << EOF
      ---
      devops_users:
        - username: "$USER1_NAME"
          ssh_key: "$USER1_SSH_KEY"
        - username: "$USER2_NAME"
          ssh_key: "$USER2_SSH_KEY"
      EOF
      
      # Последовательное выполнение всех плейбуков
      echo "1. Deploying base setup..."
      ansible-playbook -i inventory/hosts.ini playbooks/base-setup.yaml --vault-password-file .vault_pass.txt
      
      echo "2. Deploying Docker..."
      ansible-playbook -i inventory/hosts.ini playbooks/docker-setup.yaml --vault-password-file .vault_pass.txt
      
      echo "3. Deploying database..."
      ansible-playbook -i inventory/hosts.ini playbooks/db-deploy.yaml --vault-password-file .vault_pass.txt
      
      echo "4. Deploying ELGG application..."
      ansible-playbook -i inventory/hosts.ini playbooks/elgg-deploy.yaml --vault-password-file .vault_pass.txt
      
      echo "5. Deploying user management..."
      ansible-playbook -i inventory/hosts.ini playbooks/user-management.yaml \
        --vault-password-file .vault_pass.txt \
        -e @/tmp/devops_users.yml
      
      echo "🎉 Full deployment completed successfully!"
  when: manual